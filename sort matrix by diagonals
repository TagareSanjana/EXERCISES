from collections import defaultdict
class Solution:
    def sortMatrix(self, grid: list[list[int]]) -> list[list[int]]:
        n = len(grid)
        ans = [[0] * n for _ in range(n)]
        diag = defaultdict(list)
        # Gather all diagonals by key (i - j)
        for i, row in enumerate(grid):
            for j, val in enumerate(row):
                diag[i - j].append(val)
        # Sort each diagonal as per its position
        for key in diag:
            diag[key].sort(reverse=(key < 0))
        # Refill the result matrix
        for i in range(n):
            for j in range(n):
                ans[i][j] = diag[i - j].pop()
        return ans
